SEIR_factotum.R documentation

REQUIRED PACKAGES : deSolve, plotly

CAUTIONS:
    This function does not take into account the last m observations of both P and R, in order to retrieve consistently E and I.
    m = max(len(IT), len(SRT), len(IBST)), the last non-zero entry of the probability distributions (reference to IT, SRT, IBST later on this documentation file).


Inputs:
    P : list of int
        time series of all positive tested cases. time range=(0, lenP).
        
    R : list of int
        time series of all removed cases (either dead or immune).
        
    N : int 
        total population.  

    end : int
    	data points P and R will be used up to end to reconstruct the time series of S, E, I, R  
                      
Other Inputs : 

    normalise : bool (default TRUE)  ##USE OF NORMALISE=FALSE IS DEPRECATED##
	if TRUE, S,E,I,R and predictions will be divided by N
	rescale up after execution to retreive correct data scale	

    time_step : float (default 1)
	integration step for ODE SEIR model

    future : int (default 0)
	solution to SEIR model will be evaluated on the data time interval rescaled by future
	eg: if (S, E, I, R time series) data is available from day 0 to day 100 (101 entries), the SEIR solution
		(S_, E_, I_, R_) will be evaluated from day 0 to day future+100

    distr_IT, distr_SRT, distr_IBST : character 'norm', 'exp','none' (default 'exp', 'exp', 'none' resp)
	distribution to be used in estimating IT, SRT, IBST
	its value fixes the format of par_IT, par_SRT, par_IBST inputs

    par_IT, par_SRT, par_IBST : named list (default values 1/5.2, log(2)/5, NULL resp)
	list of parameters to simulate the distributions of IT, SRT, IBST
	format: 
		par_X = list('mean'=mean, 'std'=std) if distr_X='norm'
		par_X 0 list('rate'=rate) if distr_X='exp' 

    R0_exp_est_start, R0_exp_est_end : int (default 1, 5) - referred as time_start and time_end
	R0 will be estimated using I[J], where I[t] are the infected at time t and J is:
		(time_start:time_end) 	 : if user provides both 
		(1:time_end) 		 : if user provides time_end but not time_start
		(time_start:length(I))   : if user provides time_start but not time_end
		(start:end)              : if user provides neither. start and end are extrapolated with exp_period
						and aim to identify the extremes of the stage of exponential growth in I

    R0_stages : array like of length RN-1, strictly increasing
    	days that defining the stages of Rt: 
		R0_msp[1] is used in [0, R0_stages[1]]
		R0_msp[n] is used in [R0_stages[n-1], R0_stages[n]]
		R0_msp[N] is used in [R0_stages[N], length(S)]
	used if R0_msp is not missing and if fit_Rt=TRUE	

    fit_Rt : bool (default FALSE)
	if R0_msp is missing and fit_Rt=TRUE, Rt will be estimated for all times. 
	if R0_msp is missing and fit_Rt=FALSE, only initial R0 will be estimated.

    plot_data : bool (default TRUE)
	will data points be shown in final plot?

Optional inputs : 
	
    R0_msp : array like of length RN
    	values assumed by Rt. If missing, R0 or Rt (if fit_Rt=TRUE) will be estimated before solving the SEIR ode. 
	
    
Insight: 	

    IT, SRT, IBST : random variables
	Incubation Time, Symptoms to Removed Time, Infectious Before Symptoms Time
	IT[tau] = Pr(Incubation time == tau-1)
	SRT[tau] = Pr(Time span from symptomaticity to tested positive == tau-1)
	IBST[tau] = Pr(Time span from infectivity to simptomaticity == tau-1)
    
Outputs:
   
    out : list
	each item is explained below

    out$S : list of float
	data points of S (normalised if normalise=TRUE)
	same for E, I, R

    out$S_ : list fo float
	SEIR prediction of S (normalised if normalise=TRUE)
	same for E_, I_, R_
	
    out$time : list of float 
	list of t at which the SEIR prediction is evalued

    out$R0 : float
	the R0 of the epidemics as estimated

    out$start, out$end : int
	extremes of J (see R0_time_start, R0_time_end for reference)
	
    out$R0_fitting : float
	measures if J is a proper interval to fit R0 on data
	Work In Progress

    out$plot : plotly
	plot of SEIR solution. if plot_data is TRUE then it also plots the corresponding data points	

    Please not that SEIR_factotum will not output R0, start, end, R0_fitting if R0_msp and R0_stages are input by user
	
